apply plugin: 'com.google.protobuf'
apply plugin: 'com.android.library'
protobuf {
    protoc {
        // Download from repositories
        artifact = rootProject.ext.plugin.protocArtifact
    }
    plugins {
        java {
            // The codegen for lite comes as a separate artifact
            artifact = rootProject.ext.plugin.protocArtifact
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                java {}
            }
        }
    }
}


android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    api ('com.ubtrobot.communication:communication-robot:0.0.20-SNAPSHOT'){
        exclude group: 'com.ubtrobot.master:protobuf-param' ,module: 'protobuf-param'
        exclude group: 'com.ubtrobot.master' ,module: 'master'
    }
    implementation rootProject.ext.deps.protobufparam
    implementation rootProject.ext.deps.protobufLava
}
